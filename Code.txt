/*
PROJECT : Smart Waterring System
VERSION : 2.1.0
AUTHOR : M.H.A.I.S.Dissanayaka
 */

#define BLYNK_PRINT Serial

//Include libraries
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>

// Add Auth Token
char auth[] = "MAFXKX3PaJTd6hjkFEoKBvS3GrDoSG1F";


// Add WiFi credentials.
char ssid[] = "SMARTLAP";
char pass[] = "12345678";

//Declare pin
int MOTER_1 = D1;  //GPIO5
int MOTER_2 = D5;  //GPIO0

#define SENSOR D4  //GPIO2

//Declare variables
long currentMillis = 0;
long previousMillis = 0;
int interval = 1000;
boolean ledState = LOW;
float calibrationFactor = 5.8;
volatile byte pulseCount;
byte pulse1Sec = 0;
float flowRate;
unsigned long flowMilliLitres;
unsigned int totalMilliLitres;
float flowLitres;
float totalLitres;
float estiateTime;
float volume = 4;

void IRAM_ATTR pulseCounter() {
  pulseCount++;
}


//Blynk write function use for start system
BLYNK_WRITE(V0){
  int systemTurnOn = param.asInt();
  digitalWrite(MOTER_1,systemTurnOn);

}



void setup() {
  //Start serial monitor communication
  Serial.begin(115200);



  // initialize digital pin LED_BUILTIN as an output.
  pinMode(MOTER_1, OUTPUT);
  pinMode(MOTER_2, OUTPUT);
  pinMode(LED_BUILTIN, OUTPUT);
  pinMode(SENSOR, INPUT_PULLUP);


  //Add value for declaed variable
  pulseCount = 0;
  flowRate = 0.0;
  flowMilliLitres = 0;
  totalMilliLitres = 0;
  previousMillis = 0;

  attachInterrupt(digitalPinToInterrupt(SENSOR), pulseCounter, FALLING);

  Blynk.begin(auth, ssid, pass);

}

void loop() {

  //Calculate waterflow rate and total water flow
  currentMillis = millis();                           //add milis function
  if (currentMillis - previousMillis > interval) {

    pulse1Sec = pulseCount;
    pulseCount = 0;

    //Calculate flowrate
    flowRate = ((1000.0 / (millis() - previousMillis)) * pulse1Sec) / calibrationFactor;
    previousMillis = millis();

    
    flowMilliLitres = (flowRate / 60) * 1000;
    flowLitres = (flowRate / 60);

    
    totalMilliLitres += flowMilliLitres;
    //Total litters
    totalLitres += flowLitres;

    //Print the flow rate for this second in litres / minute
    Serial.print("Flow rate: ");
    Serial.print(float(flowRate));  // Print the integer part of the variable
    Serial.print("L/min");
    Serial.print("\t");       // Print tab space



    // Print the cumulative total of litres flowed since starting
    Serial.print("Output Liquid Quantity: ");
    Serial.print(totalMilliLitres);  // Print the integer part of the variable
    Serial.print("mL / ");
    Serial.print(totalLitres);       // Print the integer part of the variable
    Serial.println("L");

    //Calculate estimate time
    estiateTime = volume / flowRate;

    //add data to virtual data stream
    Blynk.virtualWrite(V1, totalLitres);
    Blynk.virtualWrite(V2, flowRate);
    Blynk.virtualWrite(V3, estiateTime);
    Blynk.virtualWrite(V4, totalLitres*1000);

    if (totalLitres < 4)                               //Compare totoal litters
    {
      if ((totalLitres > 2) && (totalLitres < 4)) {    //Compare totoal litters
        digitalWrite(MOTER_2, HIGH);                   //Start moter tow running
      }
    } else {
      digitalWrite(MOTER_1, LOW);                      //Stop moter one running
      digitalWrite(MOTER_2, LOW);                      //stop moter tow running
      Blynk.virtualWrite(V0, LOW);                     //set value switch 
      Blynk.notify("System turn off and Water supply is done..!");  //Display Warning message
    }
  }
  Blynk.run();
}
